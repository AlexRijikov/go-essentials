package main

// Дієслова форматування

import (
	"fmt"
)
// Дієслова ЗАГАЛЬНОГО ( з всіма ТИПАМИ ДАНИХ (bool,numeric,string) ) форматування

func PrintVarbsFormatting() {

	var i  = 18.5 
	var txt = " Hello Alex"

	fmt.Printf("%v\n", i) // Друкує значення у стандартному форматі
	fmt.Printf("%#v\n", i)  // Друкує значення у форматі синтаксису Go
	fmt.Printf("%v%%\n", i) // Друкує  значення з % 
	fmt.Printf("%T\n", i)  //  Друкує тип значення

	fmt.Printf("%v\n", txt)  // Друкує значення у стандартному форматі для txt 
	fmt.Printf("%#v\n", txt) //  Друкує значення у форматі синтаксису Go для txt
	fmt.Printf("%T\n", txt) // Друкує тип значення для txt

}
 
// Дієслова для цілих чисел 

func VarbsForWholeNmders() {

	var p = 10 

	fmt.Printf("%b\n", p) // Основа 2
	fmt.Printf("%d\n", p) // Основа 10
	fmt.Printf("%+d\n", p) // Основа 10 і завжди показує знак 
	fmt.Printf("%o\n", p)  //Основа 8
	fmt.Printf("%O\n", p) // Основа 8, з ведучим 0o
	fmt.Printf("%x\n", p)  //Основа 16, нижній регістр
	fmt.Printf("%X\n", p) // Основа 16, верхній регістр
	fmt.Printf("%#x\n", p) //Основа 16, з ведучим 0x
	fmt.Printf("%4d\n", p) //Накладка із пробілами (ширина 4, вирівнювання по правому краю)
	fmt.Printf("%-4d\n", p) //Накладка із пробілами (ширина 4, вирівнювання за лівим краєм)
	fmt.Printf("%04d\n", p) //Накладка з нулями (ширина 4) 

}

// Дієслова для Сток 

func VarbsForString() {

	var t = "Hello" 

	fmt.Printf("%s\n", t) // Друкує значення як звичайний рядок
	fmt.Printf("%q\n", t) //Друкує значення як рядок у подвійних лапках
	fmt.Printf("%8s\n", t) // Друкує значення як простий рядок (ширина 8, вирівнювання по правому краю)
	fmt.Printf("%-8s\n", t) // Друкує значення як простий рядок (ширина 8, вирівняне за лівим краєм)
	fmt.Printf("%x\n", t) // Друкує значення як шістнадцятковий дамп байтових значень
	fmt.Printf("% x\n", t) // Друкує значення як шістнадцятковий дамп із пробілами 

}
 func LogicalVarbs() { 

	var a = true
	var j = false 

	fmt.Printf("%t\n", a)  // Значення логічного оператора у форматі true або false (так само як при використанні %v)
	fmt.Printf("%t\n", j) //  Так само  для зміної j 

 }
 func  VarbsForFloat(){

	var f = 3.141

  fmt.Printf("%e\n", f) // Наукова нотація з показником 'e'
  fmt.Printf("%f\n", f) // Десяткова крапка, без експоненти
  fmt.Printf("%.2f\n", f)  // Ширина за замовчуванням, точність 2
  fmt.Printf("%6.2f\n", f) // Ширина 6, точність 2
  fmt.Printf("%g\n", f)  // Експонента за потреби, лише необхідні цифри
  
 }